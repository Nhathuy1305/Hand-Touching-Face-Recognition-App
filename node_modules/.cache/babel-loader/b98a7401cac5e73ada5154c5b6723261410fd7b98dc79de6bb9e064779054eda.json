{"ast":null,"code":"var _jsxFileName = \"D:\\\\Do not touch hand on your face\\\\bo_tay_ra\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport * as knnClassifier from '@tensorflow-models/knn-classifier';\n// import { Howl } from 'howler';\nimport './App.css';\n// import soundURL from './assets/hey_sound.mp3';\n\n// var sound = new Howl({\n//   src: [soundURL]\n// });\n\n//  sound.play();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOT_TOUCH_LABEL = \"not_touch\";\nconst TOUCHED_LABEL = \"touched\";\nconst TRAINING_TIME = 50;\nfunction App() {\n  _s();\n  const video = useRef();\n  const mobileNetModule = useRef();\n  const classifier = useRef();\n  const init = async () => {\n    console.log('init...');\n    await setupCamera();\n    console.log('Setup camera succes');\n    mobileNetModule.current = await mobilenet.load();\n    classifier.current = knnClassifier.create();\n    console.log('setup done');\n    console.log('Không chạm tay trên mặt và bấm Train 1');\n  };\n  const setupCamera = () => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          video: true\n        }, stream => {\n          video.current.srcObject = stream;\n          video.current.addEventListener('loadeddata', resolve);\n        }, error => reject(error));\n      } else {\n        reject();\n      }\n    });\n  };\n  const train = async label => {\n    console.log(`[${label}] Dang train cho mat dep trai cua ban`);\n    for (let i = 0; i < TRAINING_TIME; ++i) {\n      console.log(`Progress ${parseInt((i + 1) / TRAINING_TIME * 100)}%`);\n      await training(label);\n    }\n  };\n\n  /**\n   * Bước 1: Train cho máy khuôn mặt không chạm tay\n   * Bước 2: Train cho máy khuôn mặt có chạm tay\n   * Bước 3: Lấy hình ảnh hiện tại, phân tích và so sánh với data đã học trước đó\n   * ==> Nếu mà matching với data khuôn mặt chạm tay ==> Cảnh báo\n   * @param {*} label \n   * @returns \n   */\n\n  const training = label => {\n    return new Promise(async resolve => {\n      const embedding = mobileNetModule.current.infer(video.current, true);\n      classifier.current.addExample(embedding, label);\n      await sleep(100);\n      resolve();\n    });\n  };\n  const run = () => {\n    const embedding = mobileNetModule.current.infer(video.current, true);\n    classifier.current.pre;\n  };\n  const sleep = function () {\n    let ms = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    return new Promise(resolve => setTimeout(resolve, ms));\n  };\n  useEffect(() => {\n    init();\n\n    // cleanup\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: video,\n      className: \"video\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => train(NOT_TOUCH_LABEL),\n        children: \"Train 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => train(TOUCHED_LABEL),\n        children: \"Train 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => run(),\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wXpmowSsbVesJt7lBNh40QQo7Fs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","mobilenet","knnClassifier","NOT_TOUCH_LABEL","TOUCHED_LABEL","TRAINING_TIME","App","video","mobileNetModule","classifier","init","console","log","setupCamera","current","load","create","Promise","resolve","reject","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","stream","srcObject","addEventListener","error","train","label","i","parseInt","training","embedding","infer","addExample","sleep","run","pre","ms","setTimeout"],"sources":["D:/Do not touch hand on your face/bo_tay_ra/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport * as knnClassifier from '@tensorflow-models/knn-classifier'\n// import { Howl } from 'howler';\nimport './App.css';\n// import soundURL from './assets/hey_sound.mp3';\n\n// var sound = new Howl({\n//   src: [soundURL]\n// });\n\n//  sound.play();\n\nconst NOT_TOUCH_LABEL = \"not_touch\";\nconst TOUCHED_LABEL = \"touched\";\nconst TRAINING_TIME = 50;\n\nfunction App() {\n  const video = useRef();\n  const mobileNetModule = useRef();\n  const classifier = useRef();\n\n  const init = async () => {\n    console.log('init...');\n    await setupCamera();\n    console.log('Setup camera succes');\n\n    mobileNetModule.current = await mobilenet.load();\n    \n    classifier.current = knnClassifier.create();\n\n    console.log('setup done');\n    console.log('Không chạm tay trên mặt và bấm Train 1');\n  }\n\n  const setupCamera = () => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia || \n        navigator.webkitGetUserMedia || \n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      if(navigator.getUserMedia) {\n        navigator.getUserMedia(\n          { video: true },\n          stream => {\n            video.current.srcObject = stream;\n            video.current.addEventListener('loadeddata', resolve);\n          },\n          error => reject(error)\n        );\n      } else {\n        reject();\n      }\n    });\n  }\n\n  const train = async label => {\n    console.log(`[${label}] Dang train cho mat dep trai cua ban`);\n    for(let i = 0; i < TRAINING_TIME; ++i) {\n      console.log(`Progress ${parseInt((i+1) / TRAINING_TIME * 100)}%`);\n\n      await training(label);\n    }\n  }\n\n  /**\n   * Bước 1: Train cho máy khuôn mặt không chạm tay\n   * Bước 2: Train cho máy khuôn mặt có chạm tay\n   * Bước 3: Lấy hình ảnh hiện tại, phân tích và so sánh với data đã học trước đó\n   * ==> Nếu mà matching với data khuôn mặt chạm tay ==> Cảnh báo\n   * @param {*} label \n   * @returns \n   */\n\n  const training = label => {\n    return new Promise(async resolve => {\n      const embedding = mobileNetModule.current.infer(\n        video.current,\n        true\n      );\n      classifier.current.addExample(embedding, label);\n      await sleep(100);\n      resolve();\n    });\n  }\n\n  const run = () => {\n    const embedding = mobileNetModule.current.infer(\n      video.current,\n      true\n    );\n    classifier.current.pre\n  }\n\n  const sleep = (ms = 0) => {\n    return new Promise(resolve => setTimeout(resolve, ms))\n  }\n\n  useEffect(() => {\n    init();\n\n    // cleanup\n    return () => {\n\n    }\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <video\n        ref={video}\n        className=\"video\"\n        autoPlay\n      />\n\n      <div className=\"control\">\n        <button className=\"btn\" onClick={() => train(NOT_TOUCH_LABEL)}>Train 1</button>\n        <button className=\"btn\" onClick={() => train(TOUCHED_LABEL)}>Train 2</button>\n        <button className=\"btn\" onClick={() => run()}>Run</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}