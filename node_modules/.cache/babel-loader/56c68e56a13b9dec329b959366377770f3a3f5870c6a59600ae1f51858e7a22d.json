{"ast":null,"code":"var _jsxFileName = \"D:\\\\Do not touch hand on your face\\\\bo_tay_ra\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\nimport * as knnClassifier from '@tensorflow-models/knn-classifier';\n// import { Howl } from 'howler';\nimport './App.css';\n// import soundURL from './assets/hey_sound.mp3';\n\n// var sound = new Howl({\n//   src: [soundURL]\n// });\n\n//  sound.play();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NOT_TOUCH = \"not_touch\";\nconst TOUCHED = \"touch\";\nfunction App() {\n  _s();\n  const video = useRef();\n  const mobileNetModule = useRef();\n  const classifier = useRef();\n  const init = async () => {\n    console.log('init...');\n    await setupCamera();\n    console.log('Setup camera succes');\n    mobileNetModule.current = await mobilenet.load();\n    classifier.current = knnClassifier.create();\n    console.log('setup done');\n    console.log('Không chạm tay trên mặt và bấm Train 1');\n  };\n  const setupCamera = () => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      if (navigator.getUserMedia) {\n        navigator.getUserMedia({\n          video: true\n        }, stream => {\n          video.current.srcObject = stream;\n          video.current.addEventListener('loadeddata', resolve);\n        }, error => reject(error));\n      } else {\n        reject();\n      }\n    });\n  };\n  const train = label => {};\n  useEffect(() => {\n    init();\n\n    // cleanup\n    return () => {};\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"video\", {\n      ref: video,\n      className: \"video\",\n      autoPlay: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {},\n        children: \"Train 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {},\n        children: \"Train 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: () => {},\n        children: \"Run\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"wXpmowSsbVesJt7lBNh40QQo7Fs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useRef","mobilenet","knnClassifier","NOT_TOUCH","TOUCHED","App","video","mobileNetModule","classifier","init","console","log","setupCamera","current","load","create","Promise","resolve","reject","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","stream","srcObject","addEventListener","error","train","label"],"sources":["D:/Do not touch hand on your face/bo_tay_ra/src/App.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport * as mobilenet from '@tensorflow-models/mobilenet'\nimport * as knnClassifier from '@tensorflow-models/knn-classifier'\n// import { Howl } from 'howler';\nimport './App.css';\n// import soundURL from './assets/hey_sound.mp3';\n\n// var sound = new Howl({\n//   src: [soundURL]\n// });\n\n//  sound.play();\n\nconst NOT_TOUCH = \"not_touch\";\nconst TOUCHED = \"touch\";\n\nfunction App() {\n  const video = useRef();\n  const mobileNetModule = useRef();\n  const classifier = useRef();\n\n  const init = async () => {\n    console.log('init...');\n    await setupCamera();\n    console.log('Setup camera succes');\n\n    mobileNetModule.current = await mobilenet.load();\n    \n    classifier.current = knnClassifier.create();\n\n    console.log('setup done');\n    console.log('Không chạm tay trên mặt và bấm Train 1');\n  }\n\n  const setupCamera = () => {\n    return new Promise((resolve, reject) => {\n      navigator.getUserMedia = navigator.getUserMedia || \n        navigator.webkitGetUserMedia || \n        navigator.mozGetUserMedia ||\n        navigator.msGetUserMedia;\n\n      if(navigator.getUserMedia) {\n        navigator.getUserMedia(\n          { video: true },\n          stream => {\n            video.current.srcObject = stream;\n            video.current.addEventListener('loadeddata', resolve);\n          },\n          error => reject(error)\n        );\n      } else {\n        reject();\n      }\n    });\n  }\n\n  const train = label => {\n\n  }\n\n  useEffect(() => {\n    init();\n\n    // cleanup\n    return () => {\n\n    }\n  }, []);\n\n  return (\n    <div className=\"main\">\n      <video\n        ref={video}\n        className=\"video\"\n        autoPlay\n      />\n\n      <div className=\"control\">\n        <button className=\"btn\" onClick={() => {}}>Train 1</button>\n        <button className=\"btn\" onClick={() => {}}>Train 2</button>\n        <button className=\"btn\" onClick={() => {}}>Run</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,SAAS,MAAM,8BAA8B;AACzD,OAAO,KAAKC,aAAa,MAAM,mCAAmC;AAClE;AACA,OAAO,WAAW;AAClB;;AAEA;AACA;AACA;;AAEA;AAAA;AAEA,MAAMC,SAAS,GAAG,WAAW;AAC7B,MAAMC,OAAO,GAAG,OAAO;AAEvB,SAASC,GAAG,GAAG;EAAA;EACb,MAAMC,KAAK,GAAGN,MAAM,EAAE;EACtB,MAAMO,eAAe,GAAGP,MAAM,EAAE;EAChC,MAAMQ,UAAU,GAAGR,MAAM,EAAE;EAE3B,MAAMS,IAAI,GAAG,YAAY;IACvBC,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACtB,MAAMC,WAAW,EAAE;IACnBF,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAElCJ,eAAe,CAACM,OAAO,GAAG,MAAMZ,SAAS,CAACa,IAAI,EAAE;IAEhDN,UAAU,CAACK,OAAO,GAAGX,aAAa,CAACa,MAAM,EAAE;IAE3CL,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC;IACzBD,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;EACvD,CAAC;EAED,MAAMC,WAAW,GAAG,MAAM;IACxB,OAAO,IAAII,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtCC,SAAS,CAACC,YAAY,GAAGD,SAAS,CAACC,YAAY,IAC7CD,SAAS,CAACE,kBAAkB,IAC5BF,SAAS,CAACG,eAAe,IACzBH,SAAS,CAACI,cAAc;MAE1B,IAAGJ,SAAS,CAACC,YAAY,EAAE;QACzBD,SAAS,CAACC,YAAY,CACpB;UAAEd,KAAK,EAAE;QAAK,CAAC,EACfkB,MAAM,IAAI;UACRlB,KAAK,CAACO,OAAO,CAACY,SAAS,GAAGD,MAAM;UAChClB,KAAK,CAACO,OAAO,CAACa,gBAAgB,CAAC,YAAY,EAAET,OAAO,CAAC;QACvD,CAAC,EACDU,KAAK,IAAIT,MAAM,CAACS,KAAK,CAAC,CACvB;MACH,CAAC,MAAM;QACLT,MAAM,EAAE;MACV;IACF,CAAC,CAAC;EACJ,CAAC;EAED,MAAMU,KAAK,GAAGC,KAAK,IAAI,CAEvB,CAAC;EAED9B,SAAS,CAAC,MAAM;IACdU,IAAI,EAAE;;IAEN;IACA,OAAO,MAAM,CAEb,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MACE,GAAG,EAAEH,KAAM;MACX,SAAS,EAAC,OAAO;MACjB,QAAQ;IAAA;MAAA;MAAA;MAAA;IAAA,QACR,eAEF;MAAK,SAAS,EAAC,SAAS;MAAA,wBACtB;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAE,MAAM,CAAC,CAAE;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3D;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAE,MAAM,CAAC,CAAE;QAAA,UAAC;MAAO;QAAA;QAAA;QAAA;MAAA,QAAS,eAC3D;QAAQ,SAAS,EAAC,KAAK;QAAC,OAAO,EAAE,MAAM,CAAC,CAAE;QAAA,UAAC;MAAG;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACnD;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GApEQD,GAAG;AAAA,KAAHA,GAAG;AAsEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}